# Jeremy's IQ with Normal Prior as a Scale Mixture of Uniforms {.unnumbered}
## NOT WORKING DON'T PUBLISH

```{r, message=F, warning=F}
library(cmdstanr)
```

It is adapted from [Unit 7: Jeremymus.odc](../odc_files/unit7/Jeremymus.odc).

## Problem Statement

Any symmetric Unimodal distribution is a scale mixture of uniforms.

$$\theta \mid  \mu, \sigma^2 \sim N(\mu, \sigma^2)$$
is the same as
$$\theta \mid \mu, \sigma^2, d \sim U(\mu - \sigma d^{1/2}, \mu + \sigma d^{1/2}$$
$$d \sim Ga\left(\frac{3}{2}, \frac{1}{2}\right)$$
If $d \sim Ga(3/2, s/2)$, $s < 1$ prior is heavy tails, $s > 1$ light tails.


### Model

```{r file_location, include=FALSE}
tas_mixture <- file.path('stan_models/jeremymus.stan')
```

```{r, warning=FALSE, comment=NA, error=FALSE, message=FALSE}
mod <- cmdstan_model(tas_mixture)
```

now that we have compiled our stan file, we can print out the model that we will use for this:

```{r print_model}
mod$print()
```

### Sampling

We don't technically need to send anything in. We could add the values to the [transformed data](https://mc-stan.org/docs/reference-manual/program-block-transformed-data.html) block. For this I decided to pass in the value. Therefore, let us prepare the data to be passed into sample

```{r}
input_data <- list(
  df = 6,
  mu0 = 6,
  tau1 = 10,
  tau = 0.4,
  X = 10,
  Y = 10
)
```

Now that we have the data to pass into our sampling, let's proceed.

```{r sampling, message=F, warning=F, results='hide'}
fit <- mod$sample(
  data = input_data,
  seed = 123,
  chains = 4,
  parallel_chains = 4,
  refresh = 500,   # print update every 500 iterations
  iter_warmup = 1000,
  iter_sampling = 5000
)
```

```{r, comment=NA}
fit$summary()
```

These results are very similar to PyMC results.

