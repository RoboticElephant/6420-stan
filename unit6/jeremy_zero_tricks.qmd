# Jeremy with Zero Tricks {.unnumbered}

 THIS NEEDS A LOT MORE WORK. NOT GOING TO PUT ANY VALUE INTO THIS CURRENTLY.
 
 
 
 
 

```{r, message=F, warning=F}
library(cmdstanr)
```

It is adapted from [Unit 6: zerotrickjeremy.odc](../odc_files/unit6/zerotrickjeremy.odc).

Associated lecture video: Unit 6 lesson 7

## Problem Statement

This introduces the “zero trick”, which is a method for specifying custom likelihoods in BUGS. For a more detailed treatment of these methods, see Ntzoufras, page 276, which is where this explanation was presented.

```{r input_data}
baseline <- c(5.9, 7.6, 12.8, 16.5, 6.1, 14.4, 6.6, 5.4, 9.6, 11.6 ,11.1, 15.6, 9.6, 15.2, 21, 5.9, 10, 12.2, 20.2, 6.2)
after <- c(5.2, 12.2, 4.6, 4, 0.4 , 3.8, 1.2, 3.1, 3.5, 4.9, 11.1, 8.4, 5.8, 5, 6.4, 0, 2.7, 5.1, 4.8, 4.2)
```

```{r file_location, include=FALSE}
psoriasis_stan <- file.path('stan_models/psoriasis.stan')
```

```{r, warning=FALSE, comment=NA, error=FALSE, message=FALSE, }
mod <- cmdstan_model(psoriasis_stan)
```

We do get a decent amount of warnings, but the model compiles and runs.

## Model

```{r print_model, echo=FALSE}
mod$print()
```

### Sampling

Let us prepare the data to be passed into sample

```{r}
input_data <- list(N=length(baseline), 
                   baseline=baseline,
                   after=after
)
```

Now that we have the data to pass into our sampling, let's proceed.

```{r sampling, message=F, warning=F, results='hide'}
fit <- mod$sample(
  data = input_data,
  seed = 123,
  chains = 4,
  parallel_chains = 4,
  refresh = 500,   # print update every 500 iterations
  iter_warmup = 1000,
  iter_sampling = 5000
)
```

```{r, comment=NA}
fit$summary()
```

These results are very similar to BUGS and [PyMC results](https://areding.github.io/6420-pymc/unit6/Unit6-demo-psoriasis.html).
